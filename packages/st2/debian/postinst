#!/bin/sh
# postinst script for st2
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

SYS_USER=stanley
ST2_USER=st2
ST2_UPGRADESTAMP="/tmp/.stamp-stackstorm-st2-deb-package"
upgrading=0

## Permissions of files which should be set on install
DEST_PERMS=$(cat <<EHD | sed 's/\s\+/ /g'
ug+rw _sysuser:_st2user /opt/stackstorm/packs
ug+rw _sysuser:_st2user /opt/stackstorm/virtualenvs
ug+rw _st2user:_st2user /var/log/st2
755 _st2user:root       /opt/stackstorm/exports
600 _st2user:_st2user   /etc/st2/htpasswd
EHD
)

## Fix directories permissions on install (different across maint scripts!)
set_permissions() {
  local fileperms="$1"
  fileperms=$(echo "$fileperms" | sed -e "s/_sysuser/$SYS_USER/g" -e "s/_st2user/$ST2_USER/g")
  # Reqursively chown given destinations!
  echo "$fileperms" | cut -f2,3 -d' ' | xargs -n2 chown -R
  # Set directories mode
  echo "$fileperms" | cut -f1,3 -d' ' | xargs -n2 chmod -R
}

case "$1" in
    configure)
      # Initially set destination files owenership (only on the first install)
      [ -f $ST2_UPGRADESTAMP ] && upgrading=1 && rm $ST2_UPGRADESTAMP || :
      [ "$upgrading" = 0 ] && set_permissions "$DEST_PERMS" || :
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
