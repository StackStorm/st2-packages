#!/bin/sh
# preinst script for st2
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

SYS_USER=stanley
ST2_USER=st2
ST2_CONFPATH="/etc/st2/st2.conf"
ST2_UPGRADESTAMP="/tmp/.stamp-stackstorm-st2-deb-package"

## Permissions of directories which has to be reset on upgrade
RESET_PERMS=$(cat <<EHD | sed 's/\s\+/ /g'
ug+rw _sysuser:_st2user /opt/stackstorm/packs
ug+rw _sysuser:_st2user /opt/stackstorm/virtualenvs
ug+rw _st2user:_st2user /var/log/st2
755   _st2user:root     /opt/stackstorm/exports
EHD
)

## Create stackstorm users and groups
create_users() {
  exec >/dev/null
  # create st2 user (for services run with its privileges)
  if (! id $ST2_USER 1>/dev/null 2>&1); then
    adduser --group --disabled-password --no-create-home --system $ST2_USER
  fi
  # create stanley user (for actionrunner service)
  if (! id $SYS_USER 1>/dev/null 2>&1); then
    adduser --group $SYS_USER
    adduser --disabled-password --gecos "" --ingroup $SYS_USER $SYS_USER
  fi
  exec >$(tty) || :
}

## Get current system user from the st2.conf
config_sysuser() {
  local sysuser=
  if [ -f $ST2_CONFPATH ]; then
    sysuser=$(cat $ST2_CONFPATH |
      sed -n -e '/\[system_user\]/,/\[.*\]\|\$/ { /\[.*\]/d; /user\s*=/ { s/\s*user\s*=\s*//; p } }')
  fi
  echo $sysuser
}

## Update logrotate configuration
enable_logrotate() {
  [ -f /etc/logrotate.d/st2-pkgsaved.disabled ] &&
    mv -f /etc/logrotate.d/st2-pkgsaved.disabled /etc/logrotate.d/st2 || :
}

## Fix directories permissions on upgrade (different across maint scripts!)
#    Current system_user is auto-detected, so it definitly should go smooth.
#    However the same can not be said about st2 user (in case if user customises
#    services startup user, then well we don't care :)
#
set_permissions() {
  local fileperms="$1" mode= ownership= path= current_ownership=

  echo "$fileperms" | sed -e "s/_sysuser/$CONFIG_SYSUSER/g" -e "s/_st2user/$ST2_USER/g" | 
  while read mode ownership path; do
    current_ownership=$(stat -c '%U:%G' $path)

    # Do not upgrade ownership on each upgrade just do it during the first one
    if [ "$current_ownership" != "$ownership" ]; then
      # Recursively own path (in case it's a directory) 
      chown -R $ownership $path
      chmod -R $mode $path
    fi
  done
}

# Get current system_user from st2.conf
CONFIG_SYSUSER=$(config_sysuser)
: ${CONFIG_SYSUSER:=stanley}

case "$1" in
    install)
      create_users
      enable_logrotate
    ;;
    upgrade)
      create_users
      enable_logrotate
      set_permissions "$RESET_PERMS"
      touch $ST2_UPGRADESTAMP
    ;;
    abort-upgrade)
    ;;
    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
