#!/bin/sh
# preinst script for st2
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

PACKS_GROUP=st2packs
SYS_USER=stanley
ST2_USER=st2
ST2_CONFPATH="/etc/st2/st2.conf"
ST2_UPGRADESTAMP="/tmp/.stamp-stackstorm-st2-deb-package"

## Permissions of directories which has to be reset on upgrade
RESET_PERMS=$(cat <<EHD | sed 's/\s\+/ /g'
ug+rw root:_packsgroup /opt/stackstorm/packs
ug+rw root:_packsgroup /opt/stackstorm/virtualenvs
755 _st2user:root      /opt/stackstorm/exports
EHD
)

## Create stackstorm users and groups
create_users() {
  exec >/dev/null
  # create st2 user (services user)
  (id $ST2_USER 2>/dev/null) ||
    adduser --group --disabled-password --no-create-home --system $ST2_USER
  # make st2 member of st2packs group
  (getent group $PACKS_GROUP 2>/dev/null) || groupadd -r $PACKS_GROUP
  (groups $ST2_USER 2>/dev/null | grep -q "\b${PACKS_GROUP}\b") ||
    usermod -a -G $PACKS_GROUP $ST2_USER
  # create stanley user (for actionrunner service)
  if (! id $SYS_USER 2>/dev/null); then
    adduser --group $SYS_USER
    adduser --disabled-password --gecos "" --ingroup $SYS_USER $SYS_USER
  fi
  exec >$(tty) || :
}

## [NOT USED!] Get current system user from the st2.conf
config_sysuser() {
  # exit hooked
  return 0
  local sysuser=
  if [ -f $ST2_CONFPATH ]; then
    sysuser=$(cat $ST2_CONFPATH |
      sed -n -e '/\[system_user\]/,/\[.*\]\|\$/ { /\[.*\]/d; /user\s*=/ { s/\s*user\s*=\s*//; p } }')
  fi
  echo $sysuser
}

## Update logrotate configuration
enable_logrotate() {
  [ -f /etc/logrotate.d/st2-pkgsaved.disabled ] &&
    mv -f /etc/logrotate.d/st2-pkgsaved.disabled /etc/logrotate.d/st2 || :
}

## Fix directories permissions on upgrade (different across maint scripts!)
#  (!USED FOR COMPATIBILITY ON UPGRADE FROM PREVIOUS VERSIONS OF PACKAGES!)
#
set_permissions() {
  local fileperms="$1" mode= ownership= path= current_ownership=

  echo "$fileperms" | sed -e "s/_packsgroup/$PACKS_GROUP/g" -e "s/_st2user/$ST2_USER/g" |
  while read mode ownership path; do
    current_ownership=$(stat -c '%U:%G' $path)

    # Do not upgrade ownership on each upgrade just do it during the first one
    if [ "$current_ownership" != "$ownership" ]; then
      # Recursively own path (in case it's a directory) 
      chown -R $ownership $path
      chmod -R $mode $path
    fi
  done
}

case "$1" in
    install)
      create_users
      enable_logrotate
    ;;
    upgrade)
      create_users
      enable_logrotate
      set_permissions "$RESET_PERMS"
      touch $ST2_UPGRADESTAMP
    ;;
    abort-upgrade)
    ;;
    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
